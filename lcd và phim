#include <LiquidCrystalSerial.h>
#include <ShiftRegister74HC595.h>

// Khai báo chân kết nối với 74HC595
#define SH_CP 3
#define DS    2
#define ST_CP 4

// Khởi tạo LCD và shift register
LiquidCrystalSerial lcd(SH_CP, DS, ST_CP);
ShiftRegister74HC595<2> sr(SH_CP, DS, ST_CP);

// Cấu hình bàn phím
const int columns[] = {5, 6, 7}; // Các chân cột
const byte rows[] = {0b0001, 0b0010, 0b0100, 0b1000}; // Các hàng

// Lưu trạng thái của IC 74HC595
byte sr_state[2] = {0x00, 0x00}; // 2 byte cho 16 chân

void setup() {
  Serial.begin(9600);

  // Khởi tạo shift register
  sr.setAllLow();

  // Khởi tạo LCD
  lcd.begin(16, 2);
  lcd.print("System Ready");

  // Cấu hình cột của bàn phím
  for (int i = 0; i < 3; i++) {
    pinMode(columns[i], INPUT_PULLUP);
  }
}

// Hàm cập nhật trạng thái shift register
void updateShiftRegister() {
  sr.setAllLow();
  for (int i = 0; i < 2; i++) {
    sr.setNoUpdate(i, sr_state[i]); // Cập nhật từng byte
  }
  sr.updateRegisters(); // Gửi dữ liệu đến 74HC595
}

void updateLCD() {
  // Ghi dữ liệu LCD (không ghi đè trạng thái bàn phím)
  lcd.setCursor(0, 0);
  lcd.print("Time: ");
  lcd.print(millis() / 1000);
}

void scanKeypad() {
  // Quét bàn phím
  for (int r = 0; r < 4; r++) {
    sr_state[0] = rows[r]; // Bật hàng hiện tại
    updateShiftRegister();
    delay(1); // Đợi tín hiệu ổn định

    for (int c = 0; c < 3; c++) {
      if (digitalRead(columns[c]) == LOW) {
        Serial.print("Key Pressed: Row ");
        Serial.print(r);
        Serial.print(", Column ");
        Serial.println(c);
      }
    }
  }
}

void loop() {
  updateLCD(); // Cập nhật LCD
  scanKeypad(); // Quét bàn phím
}
